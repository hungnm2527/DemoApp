@model PaginatedList<DemoApp.Models.View.OrderView>

@{
    ViewData["Title"] = "Index";
}

<h1>Orders</h1>

<form asp-controller="Orders" asp-action="Index">
    <p>
        Enter Category to search: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
        <input type="submit" value="Search" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["ProductNameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Product Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CategoryNameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Category Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CustomerNameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Customer Name</a>
            </th>
            <th>
                Amount
            </th>
            <th>
                Order Date
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderDate)
                </td>

            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

<p>
    <a asp-action="AddOrEdit" style="float:right">Create New</a>
</p>
